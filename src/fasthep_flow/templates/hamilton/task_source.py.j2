"""This file was generated by fasthep-flow"""
from __future__ import annotations

from functools import partial
from pathlib import Path

from hamilton.function_modifiers import cache
from typing import Any

from fasthep_flow.config import load_config, plugins_by_task
from fasthep_flow.plugins import task_wrapper, init_plugins
from fasthep_flow.workflow import Task

config = load_config(Path("{{ config_file }}"))
plugins = init_plugins(plugins_by_task(config))
local_wrapper = partial(task_wrapper, plugins=plugins)

{% for module_path, class_name in dynamic_imports.items() -%}
from {{ module_path }} import {{ class_name }}
{% endfor %}

{% for task_name, (source, needs) in task_sources.items() %}
{% if enable_cache -%}
@cache(format="{{ task_cache_format }}")
{% endif -%}
@local_wrapper
{% if needs -%}
def {{task_name}}(
{% for need in needs -%}
    {{need}}: dict[str, Any],
{%- endfor %}
) -> dict[str, Any]:
{% for need in needs -%}
    __data__ = dict("{{need}}"={{need}})
{%- endfor %}
{%- else -%}
def {{task_name}} () -> dict[str, Any]:
    __data__ = {}
{%- endif %}
    return {{ source }}(data=__data__)
{% endfor %}
